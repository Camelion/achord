buildscript {
    ext {
        moduleName = "achord"
        nettyVersion = "4.1.22.Final"
    }
    repositories {
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:latest.release'
        classpath 'com.netflix.nebula:nebula-project-plugin:latest.release'
    }
}
apply plugin: 'java'
apply plugin: 'org.junit.platform.gradle.plugin'

repositories {
    maven { url "https://repo.spring.io/snapshot" }
    mavenCentral()
}

group 'com.github.mangelion'
sourceCompatibility = 1.10

sourceSets {
    jmh
}

dependencies {
    compile group: 'io.netty', name: 'netty-buffer', version: nettyVersion
    compile group: 'io.netty', name: 'netty-codec', version: nettyVersion
    compile group: 'org.jctools', name: 'jctools-core', version: '2.1.2'
    compile group: 'org.lz4', name: 'lz4-java', version: '1.4.1'
    compile group: 'com.github.luben', name: 'zstd-jni', version: '1.3.3-4'
}

dependencies {
    jmhCompile project
    jmhCompile 'org.openjdk.jmh:jmh-core:latest.release'
    jmhCompile 'org.openjdk.jmh:jmh-generator-annprocess:latest.release'
    jmhCompile group: 'io.netty', name: 'netty-buffer', version: nettyVersion
}

dependencies {
    testCompile group: 'io.projectreactor', name: 'reactor-test', version: '3.1.5.RELEASE'
    testCompile group: 'com.github.docker-java', name: 'docker-java', version: '3.0.14'
    testRuntimeOnly group: 'io.netty', name: 'netty-transport-native-epoll', version: nettyVersion
    testRuntimeOnly group: 'io.netty', name: 'netty-transport-native-kqueue', version: nettyVersion, classifier: 'osx-x86_64'

    testRuntimeOnly group: 'javax.activation', name: 'activation', version: '1.1.1'

    testCompile group: 'ru.yandex.clickhouse', name: 'clickhouse-jdbc', version: '0.1.39'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
}

test {
    useJUnitPlatform {
        includeEngines 'junit-jupiter'
        excludeTags 'jdbc-comparison'
    }
}

compileJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}

compileJmhJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}

javadoc {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.addStringOption('-module-path', classpath.asPath)
    }
}

task jmh(type: JavaExec) {
    classpath = sourceSets.jmh.runtimeClasspath
    main = 'org.openjdk.jmh.Main'
    args '.*'
    args '-prof'
    args 'dtraceasm'

    println commandLine
}
